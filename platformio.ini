; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = ESP32-S3 Arduino LVGL WIFI&Bluetooth Development Board 4.0 480 * 480 Smart Display 4.0 inch LCD TFT Module Capacitive Touch 
default_envs = ESP32-4848S040
boards_dir = boards
src_dir = src
lib_dir = lib
data_dir = balboa-spa/dist

[libraries]
CircularBuffer = rlogiacco/CircularBuffer @ ^1.3.3
pubsubclient = PubSubClient@2.8
arduinojson = ArduinoJson@6.18.3
wifimanager32 = https://github.com/tzapu/WiFiManager.git#9f5981e
Ticker = sstaub/TickTwo@^4.4.0
arduinolog = thijse/ArduinoLog@1.1.1
DallasTemperature = milesburton/DallasTemperature @ ^3.11.0
CRC8 = RobTillaart/CRC
ESPAsyncWebServer = https://github.com/me-no-dev/ESPAsyncWebServer.git
base64 = https://github.com/Densaugeo/base64_arduino.git
telnet = jandrassy/TelnetStream

; lvgl required libraries
lvgl = lvgl/lvgl @ ^8.3.0-dev
Arduino_GFX = moononournation/GFX Library for Arduino@^1.2.9


; edp47 required libraries

edp47 = https://github.com/Xinyuan-LilyGO/LilyGo-EPD47.git#esp32s3
Wire = Wire
SPI = SPI

[com]
platform = espressif32@6.8.1
board = esp32dev
monitor_filters = esp32_exception_decoder
framework = arduino
build_type = debug
board_build.filesystem = littlefs
board_build.partitions = spa_module.csv
extra_scripts = post:scripts/extra_script.py

build_flags =
  -D LOG_LEVEL=LOG_LEVEL_VERBOSE

lib_deps = 
	${libraries.wifimanager32}
	${libraries.CircularBuffer}
	${libraries.PubSubClient}
	${libraries.ArduinoJson}
	${libraries.Ticker}
	${libraries.arduinolog}
	${libraries.DallasTemperature}
	${libraries.CRC8}
	${libraries.ESPAsyncWebServer}
	${libraries.base64}
	${libraries.telnet}

[com-edp47]
build_flags =
    -D ARDUINO_USB_CDC_ON_BOOT=1

lib_deps = 
	${libraries.Wire}
	${libraries.edp47}
	${libraries.SPI}

[com-lvgl]
build_flags =
  -D ARDUINO_USB_CDC_ON_BOOT=1

lib_deps = 
	${libraries.lvgl}
	${libraries.Arduino_GFX}

[env:ESP32serial]
platform = ${com.platform}
board =  ${com.board}
monitor_filters = ${com.monitor_filters}
framework = ${com.framework}
build_type = ${com.build_type}
board_build.filesystem = ${com.board_build.filesystem}
board_build.partitions = ${com.board_build.partitions}
extra_scripts = ${com.extra_scripts}

lib_deps = ${com.lib_deps}

build_flags =
  ${com.build_flags}
  -D PRODUCTION
;	-D LOCAL_CONNECT
;  -D LOCAL_CLIENT
;	-D BRIDGE
  -D REMOTE_CLIENT
;	-D TELNET_LOG

monitor_port = /dev/cu.usbserial-0001
monitor_speed = 115200
upload_port = /dev/cu.usbserial-0001
upload_speed = 921600

[env:ESP32ota]
platform = ${com.platform}
board =  ${com.board}
monitor_filters = ${com.monitor_filters}
framework = ${com.framework}
build_type = ${com.build_type}
board_build.filesystem = ${com.board_build.filesystem}
board_build.partitions = ${com.board_build.partitions}
extra_scripts = ${com.extra_scripts}

lib_deps = ${com.lib_deps}

build_flags =
  ${com.build_flags}
  -D PRODUCTION
;  -D REMOTE_CLIENT
;	-D LOCAL_CONNECT
;	-D LOCAL_CLIENT
;	-D BRIDGE
	-D TELNET_LOG

monitor_port = /dev/cu.usbserial-0001
monitor_speed = 115200

upload_port = spa-3C71BF9DFA90.local.		; connected to serial port
; upload_port = spa-3C71BF9DFA90.local.
upload_protocol = espota

[env:ESP32prodOta]
platform = ${com.platform}
board =  ${com.board}
monitor_filters = ${com.monitor_filters}
framework = ${com.framework}
build_type = ${com.build_type}
board_build.filesystem = ${com.board_build.filesystem}
board_build.partitions = ${com.board_build.partitions}
extra_scripts = ${com.extra_scripts}

lib_deps = ${com.lib_deps}

build_flags =
  ${com.build_flags}
  -D PRODUCTION
;  -D REMOTE_CLIENT
	-D LOCAL_CONNECT
	-D LOCAL_CLIENT
	-D BRIDGE
	-D TELNET_LOG

monitor_port = /dev/cu.usbserial-0001
monitor_speed = 115200

upload_port = spa-240AC4EC20DC.local. ; prod board
upload_protocol = espota

[env:ESP32-epd47]
platform = ${com.platform}
board = T5-ePaper-S3
monitor_filters = ${com.monitor_filters}
framework = ${com.framework}
build_type = ${com.build_type}
board_build.filesystem = ${com.board_build.filesystem}
board_build.partitions = default_16MB.csv
extra_scripts = ${com.extra_scripts}

lib_deps = ${com.lib_deps}
	${com-edp47.lib_deps}

build_flags =
  ${com.build_flags}
	${com-edp47.build_flags}
  -D REMOTE_CLIENT
;	-D LOCAL_CONNECT
;	-D LOCAL_CLIENT
;	-D TELNET_LOG
	-D spaEpaper

;monitor_port = /dev/cu.usbmodem101
monitor_speed = 115200

upload_port = spa-7CDFA1FFF2B0.local  ; prod board
;upload_speed = 921600
upload_protocol = espota

[env:ESP32-4848S040]
platform = ${com.platform}
board =  esp32-s3-devkitm-1
monitor_filters = ${com.monitor_filters}
framework = ${com.framework}
build_type = ${com.build_type}
board_build.filesystem = ${com.board_build.filesystem}
board_build.partitions = huge_app.csv
extra_scripts = ${com.extra_scripts}

lib_deps = ${com.lib_deps}
	${com-lvgl.lib_deps}

build_flags =
  ${com.build_flags}
	${com-lvgl.build_flags}
  -D PRODUCTION
  -D REMOTE_CLIENT
;	-D LOCAL_CONNECT
;	-D LOCAL_CLIENT
;	-D BRIDGE
;	-D TELNET_LOG
;  -D LV_CONF_INCLUDE_SIMPLE
  -D LVGL_DISPLAY
	-D LV_CONF_PATH=~/Code/ESP32-4848S040/src/lv_conf.h

monitor_port = /dev/cu.usbserial-1140
monitor_speed = 115200

upload_port = /dev/cu.usbserial-1140
upload_speed = 921600
; upload_port = spa-240AC4EC20DC.local. ; prod board
; upload_protocol = espota